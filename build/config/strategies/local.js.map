{"version":3,"sources":["../../../server/config/strategies/local.js"],"names":["passport","require","LocalStrategy","Strategy","User","module","exports","use","usernameField","passwordField","session","email","password","done","findOne","err","user","message","authenticate"],"mappings":"AAAA;AACA;;AAEA;;AACA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,MAAMC,gBAAgBD,QAAQ,gBAAR,EAA0BE,QAAhD;AACA,MAAMC,OAAOH,QAAQ,mBAAR,CAAb;;AAEA;AACAI,OAAOC,OAAP,GAAiB,YAAY;AAC5B;AACAN,UAASO,GAAT,CAAa,IAAIL,aAAJ,CAAkB;AAC9BM,iBAAe,OADe;AAE9BC,iBAAe,UAFe;AAG9BC,WAAS;AAHqB,EAAlB,EAIV,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AACnC;AACAT,OAAKU,OAAL,CAAa,EAACH,OAAOA,KAAR,EAAb,EAA6B,CAACI,GAAD,EAAMC,IAAN,KAAe;AAC3C;AACA,OAAID,GAAJ,EAAS;AACR,WAAOF,KAAKE,GAAL,CAAP;AACA;;AAED;AACA,OAAI,CAACC,IAAL,EAAW;AACV,WAAOH,KAAK,IAAL,EAAW,KAAX,EAAkB;AACxBI,cAAS;AADe,KAAlB,CAAP;AAGA;;AAED;AACA,OAAI,CAACD,KAAKE,YAAL,CAAkBN,QAAlB,CAAL,EAAkC;AACjC,WAAOC,KAAK,IAAL,EAAW,KAAX,EAAkB;AACxBI,cAAS;AADe,KAAlB,CAAP;AAGA;;AAED;AACA,UAAOJ,KAAK,IAAL,EAAWG,IAAX,CAAP;AACA,GAtBD;AAuBA,EA7BY,CAAb;AA8BA,CAhCD","file":"local.js","sourcesContent":["// Invoke 'strict' JavaScript mode\n'use strict';\n\n// Load the module dependencies\nconst passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\nconst User = require(\"../../models/user\");\n\n// Create the Local strategy configuration method\nmodule.exports = function () {\n\t// Use the Passport's Local strategy \n\tpassport.use(new LocalStrategy({\n\t\tusernameField: 'email',\n\t\tpasswordField: 'password',\n\t\tsession: false,\n\t}, function (email, password, done) {\n\t\t// Use the 'User' model 'findOne' method to find a user with the current username\n\t\tUser.findOne({email: email}, (err, user) => {\n\t\t\t// If an error occurs continue to the next middleware\n\t\t\tif (err) {\n\t\t\t\treturn done(err);\n\t\t\t}\n\n\t\t\t// If a user was not found, continue to the next middleware with an error message\n\t\t\tif (!user) {\n\t\t\t\treturn done(null, false, {\n\t\t\t\t\tmessage: 'Unknown user'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the passport is incorrect, continue to the next middleware with an error message\n\t\t\tif (!user.authenticate(password)) {\n\t\t\t\treturn done(null, false, {\n\t\t\t\t\tmessage: 'Invalid password'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Otherwise, continue to the next middleware with the user object\n\t\t\treturn done(null, user);\n\t\t});\n\t}));\n};\n"]}