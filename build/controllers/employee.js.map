{"version":3,"sources":["../../server/controllers/employee.js"],"names":["getAggreateMatchedIds","result","ids","i","length","push","_id","getSearchReg","search","terms","split","regexString","RegExp","req","res","filter","offset","query","_offset","parseInt","limit","_limit","console","log","cursor","find","sort","createdAt","skip","exec","then","emploees","count","totalCount","json","metadata","records","catch","error","status","message","exports","employee_list","effort_lte","effort_gte","effort","$lte","$gte","_summary","undefined","aggregate","project","fullname","$concat","match","results","$in","$match","$group","name","$sum","stats","forEach","owner","employee_create","newEmployee","body","created","Date","newUser","save","savedEmployee","employee_bulk_delete","docIds","map","id","Types","ObjectId","deleteMany","deleteResult","n","employee_detail","documentId","params","findOne","employee","handleError","employee_update","updatedAt","findOneAndUpdate","new","err","updatedEmployee","employee_delete","docId","deleteOne","generate_employees","gender","employees","firstName","lastName","title","jobTitle","department","commerce","randomGender","Math","floor","random","randomEmail","internet","email","randomDate","date","recent","insertMany","docs"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAGA,MAAMA,wBAAyBC,MAAD,IAAY;AACxC,MAAIC,MAAM,EAAV;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAAOG,MAA3B,EAAmCD,GAAnC,EAAwC;AACtCD,QAAIG,IAAJ,CAASJ,OAAOE,CAAP,EAAUG,GAAnB;AACD;AACD,SAAOJ,GAAP;AACD,CAND;AAOA,MAAMK,eAAgBC,MAAD,IAAY;AAC/B,MAAIC,QAAQD,OAAOE,KAAP,CAAa,GAAb,CAAZ;;AAEA,MAAIC,cAAc,EAAlB;;AAEA,OAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAIM,MAAML,MAA1B,EAAkCD,GAAlC,EAAuC;AACrCQ,mBAAeF,MAAMN,CAAN,CAAf;AACA,QAAIA,IAAIM,MAAML,MAAN,GAAe,CAAvB,EAA0BO,eAAe,GAAf;AAC3B;;AAED,SAAO,IAAIC,MAAJ,CAAWD,WAAX,EAAwB,IAAxB,CAAP;AACD,CAXD;AAYA,MAAMH,SAAS,CAACK,GAAD,EAAMC,GAAN,EAAWC,MAAX,KAAsB;AACnC,QAAMC,SAASH,IAAII,KAAJ,CAAUC,OAAV,GAAoBC,SAASN,IAAII,KAAJ,CAAUC,OAAnB,EAA4B,EAA5B,CAApB,GAAsD,CAArE;AACA,MAAIE,QAAQP,IAAII,KAAJ,CAAUI,MAAV,GAAmBF,SAASN,IAAII,KAAJ,CAAUI,MAAnB,EAA2B,EAA3B,CAAnB,GAAoD,EAAhE;;AAEAC,UAAQC,GAAR,CAAY,QAAZ,EAAsBP,MAAtB;AACAM,UAAQC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAE,UAAQC,GAAR,CAAY,QAAZ,EAAsBR,MAAtB;;AAEA,MAAIK,QAAQ,EAAZ,EAAgBA,QAAQ,EAAR;AAChB,QAAMI,SAAS,mBAASC,IAAT,CAAcV,MAAd,EAAsBW,IAAtB,CAA2B;AACxCC,eAAW,CAAC;AAD4B,GAA3B,EAEZC,IAFY,CAEPZ,MAFO,EAECI,KAFD,CAEOA,KAFP,CAAf;;AAIA;AACAI,SAAOK,IAAP,GAAcC,IAAd,CAAmBC,YAAY;AAC7B,uBAASC,KAAT,GAAiBF,IAAjB,CAAsBG,cAAc;AAClCnB,UAAIoB,IAAJ,CAAS;AACPC,kBAAU;AACRF;AADQ,SADH;AAIPG,iBAASL;AAJF,OAAT;AAMD,KAPD;AAQD,GATD,EASGM,KATH,CASSC,SAAS;AAChBhB,YAAQC,GAAR,CAAYe,KAAZ;AACAxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,0BAAyBF,KAAM;AADtB,KAArB;AAGD,GAdD;AAeD,CA7BD;AA8BA;AACAG,QAAQC,aAAR,GAAwB,UAAU7B,GAAV,EAAeC,GAAf,EAAoB;AAC1C,QAAMC,SAAS,EAAf;AACA,MAAIF,IAAII,KAAJ,CAAUsB,MAAd,EAAsBxB,OAAOwB,MAAP,GAAgB1B,IAAII,KAAJ,CAAUsB,MAA1B;AACtB,MAAI1B,IAAII,KAAJ,CAAU0B,UAAV,IAAwB9B,IAAII,KAAJ,CAAU2B,UAAtC,EAAkD7B,OAAO8B,MAAP,GAAgB,EAAhB;AAClD,MAAIhC,IAAII,KAAJ,CAAU0B,UAAd,EAA0B5B,OAAO8B,MAAP,CAAcC,IAAd,GAAqB3B,SAASN,IAAII,KAAJ,CAAU0B,UAAnB,EAA+B,EAA/B,CAArB;AAC1B,MAAI9B,IAAII,KAAJ,CAAU2B,UAAd,EAA0B7B,OAAO8B,MAAP,CAAcE,IAAd,GAAqB5B,SAASN,IAAII,KAAJ,CAAU2B,UAAnB,EAA+B,EAA/B,CAArB;;AAG1B,MAAI/B,IAAII,KAAJ,CAAU+B,QAAV,KAAuBC,SAA3B,EAAsC;AACpC,QAAIpC,IAAII,KAAJ,CAAUT,MAAd,EAAsB;;AAEpB,yBAAS0C,SAAT,GACGC,OADH,CACW;AACPC,kBAAU;AACRC,mBAAS,CAAC,iBAAD,EAAoB,GAApB,EAAyB,gBAAzB;AADD;AADH,OADX,EAMGC,KANH,CAMS;AACLF,kBAAU,IAAIxC,MAAJ,CAAWC,IAAII,KAAJ,CAAUT,MAArB,EAA6B,IAA7B;AADL,OANT,EAQKqB,IARL,GAQYC,IARZ,CAQiByB,WAAW;AACxBjC,gBAAQC,GAAR,CAAY,SAAZ,EAAuBhB,aAAaM,IAAII,KAAJ,CAAUT,MAAvB,CAAvB;AACA,cAAMN,MAAMF,sBAAsBuD,OAAtB,CAAZ;AACA,YAAIrD,IAAIE,MAAJ,GAAa,CAAjB,EAAoBW,OAAOT,GAAP,GAAa;AAC/BkD,eAAKtD;AAD0B,SAAb;AAGpBM,eAAOK,GAAP,EAAYC,GAAZ,EAAiBC,MAAjB;AACD,OAfH;AAgBD,KAlBD,MAkBOP,OAAOK,GAAP,EAAYC,GAAZ,EAAiBC,MAAjB;AACR,GApBD,MAoBO;AACLO,YAAQC,GAAR,CAAY,mBAAZ,EAAiCR,MAAjC;AACA,uBAASmC,SAAT,CAAmB,CAAC;AACdO,cAAQ1C;AADM,KAAD,EAGf;AACE2C,cAAQ;AACNpD,aAAK;AACHqD,gBAAM,QADH;AAEHhC,qBAAW;AAFR,SADC;AAKNK,eAAO;AACL4B,gBAAM;AADD;AALD;AADV,KAHe,CAAnB,EAcK/B,IAdL,GAcYC,IAdZ,CAciByB,WAAW;AACxB,YAAMM,QAAQ,EAAd;AACAN,cAAQO,OAAR,CAAgB7D,UAAU;AACxB,YAAI,CAAC4D,MAAM5D,OAAOK,GAAP,CAAWyD,KAAjB,CAAL,EAA8BF,MAAM5D,OAAOK,GAAP,CAAWyD,KAAjB,IAA0B,EAA1B;AAC9BF,cAAM5D,OAAOK,GAAP,CAAWyD,KAAjB,EAAwB9D,OAAOK,GAAP,CAAWiC,MAAnC,IAA6CtC,OAAO+B,KAApD;AACD,OAHD;AAIAlB,UAAIoB,IAAJ,CAAS2B,KAAT;AACD,KArBH,EAsBGxB,KAtBH,CAsBSC,SAAS;AACdhB,cAAQC,GAAR,CAAYe,KAAZ;AACAxB,UAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,iBAAU,0BAAyBF,KAAM;AADtB,OAArB;AAGD,KA3BH;AA4BD;AACF,CA3DD;;AA6DAG,QAAQuB,eAAR,GAA0B,UAAUnD,GAAV,EAAeC,GAAf,EAAoB;AAC5C,QAAMmD,cAAcpD,IAAIqD,IAAxB;AACAD,cAAYE,OAAZ,GAAsB,IAAIC,IAAJ,EAAtB;AACA,MAAI,CAACH,YAAY1B,MAAjB,EAAyB;AACvB0B,gBAAY1B,MAAZ,GAAqB,KAArB;AACD;;AAED,MAAI8B,UAAU,uBAAaJ,WAAb,CAAd;AACAI,UAAQC,IAAR,GAAexC,IAAf,CAAoByC,iBAAiB;AACnCzD,QAAIoB,IAAJ,CAASqC,aAAT;AACD,GAFD,EAEGlC,KAFH,CAESC,SAAS;AAChBhB,YAAQC,GAAR,CAAYe,KAAZ;AACAxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,0BAAyBF,KAAM;AADtB,KAArB;AAGD,GAPD;AAQD,CAhBD;;AAoBAG,QAAQ+B,oBAAR,GAA+B,UAAU3D,GAAV,EAAeC,GAAf,EAAoB;AACjD,MAAI2D,SAAS5D,IAAIqD,IAAJ,CAASO,MAAtB;AACA,MAAI;AACFA,aAASA,OAAOC,GAAP,CAAWC,MAAM,mBAASC,KAAT,CAAeC,QAAf,CAAwBF,EAAxB,CAAjB,CAAT;AACD,GAFD,CAEE,OAAOrC,KAAP,EAAc;AACdxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,4BAA2BF,KAAM;AADxB,KAArB;AAGA;AACD;;AAED,qBAASwC,UAAT,CAAoB;AAClBxE,SAAK;AACH,aAAOmE;AADJ;AADa,GAApB,EAIG3C,IAJH,CAISiD,YAAD,IAAkB;AACxBzD,YAAQC,GAAR,CAAY,cAAZ,EAA4BwD,aAAa9E,MAAzC;AACA,QAAI8E,aAAa9E,MAAb,CAAoB+E,CAApB,KAA0BP,OAAOrE,MAArC,EAA6CU,IAAIoB,IAAJ,CAAS;AACpDK,cAAQ;AAD4C,KAAT,EAA7C,KAGKzB,IAAIoB,IAAJ,CAAS;AACZK,cAAQ;AADI,KAAT;AAGN,GAZD,EAYGF,KAZH,CAYSC,SAAS;AAChBhB,YAAQC,GAAR,CAAYe,KAAZ;AACAxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,0BAAyBF,KAAM;AADtB,KAArB;AAGD,GAjBD;AAkBD,CA7BD;;AA+BA;AACAG,QAAQwC,eAAR,GAA0B,UAAUpE,GAAV,EAAeC,GAAf,EAAoB;AAC5C,MAAIoE,UAAJ;AACA,MAAI;AACFA,iBAAa,mBAASN,KAAT,CAAeC,QAAf,CAAwBhE,IAAIsE,MAAJ,CAAWR,EAAnC,CAAb;AACD,GAFD,CAEE,OAAOrC,KAAP,EAAc;AACdhB,YAAQC,GAAR,CAAY,OAAZ,EAAqBe,KAArB;AACAxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,4BAA2BF,KAAM;AADxB,KAArB;AAGA;AACD;;AAED,qBAAS8C,OAAT,CAAiB;AACf9E,SAAK4E;AADU,GAAjB,EAEGpD,IAFH,CAEQuD,YAAY;AAClB,QAAI,CAACA,QAAL,EAAevE,IAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAClCM,eAAU,qBAAoB0C,UAAW;AADP,KAArB,EAAf,KAGKpE,IAAIoB,IAAJ,CAASmD,QAAT;AACN,GAPD,EAOGhD,KAPH,CAOSC,SAAS;AAChBhB,YAAQC,GAAR,CAAYe,KAAZ;AACAxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,0BAAyBF,KAAM;AADtB,KAArB;AAGD,GAZD;AAaD,CAzBD;;AA2BA,MAAMgD,cAAc,CAAChD,KAAD,EAAQxB,GAAR,KAAgB;AAClCQ,UAAQgB,KAAR,CAAcA,KAAd;AACA,SAAOxB,IAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BM,aAAU,0BAAyBF,KAAM;AADf,GAArB,CAAP;AAGD,CALD;AAMA;AACAG,QAAQ8C,eAAR,GAA0B,UAAU1E,GAAV,EAAeC,GAAf,EAAoB;AAC5C,MAAIR,GAAJ;AACA,MAAI;AACFA,UAAM,mBAASsE,KAAT,CAAeC,QAAf,CAAwBhE,IAAIsE,MAAJ,CAAWR,EAAnC,CAAN;AACD,GAFD,CAEE,OAAOrC,KAAP,EAAc;AACd,WAAOxB,IAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BM,eAAU,4BAA2BF,KAAM;AADjB,KAArB,CAAP;AAGD;;AAED,QAAM+C,WAAWxE,IAAIqD,IAArB;AACAmB,WAASG,SAAT,GAAqB,IAAIpB,IAAJ,EAArB;;AAEA,qBAASqB,gBAAT,CAA0B;AACxB,WAAOnF;AADiB,GAA1B,EAEG;AACD,YAAQ+E;AADP,GAFH,EAIG;AACDK,SAAK;AADJ,GAJH,EAMG,UAAUC,GAAV,EAAeC,eAAf,EAAgC;AACjC,QAAID,GAAJ,EAAS,OAAOL,YAAYK,GAAZ,EAAiB7E,GAAjB,CAAP;AACTA,QAAIoB,IAAJ,CAAS0D,eAAT;AACD,GATD;AAUD,CAvBD;;AAyBA;AACAnD,QAAQoD,eAAR,GAA0B,UAAUhF,GAAV,EAAeC,GAAf,EAAoB;AAC5CQ,UAAQC,GAAR,CAAY,iBAAZ,EAA+BV,IAAIsE,MAAJ,CAAWR,EAA1C;AACA,MAAImB,KAAJ;AACA,MAAI;AACFA,YAAQ,mBAASlB,KAAT,CAAeC,QAAf,CAAwBhE,IAAIsE,MAAJ,CAAWR,EAAnC,CAAR;AACD,GAFD,CAEE,OAAOrC,KAAP,EAAc;AACd,WAAOxB,IAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AAC1BM,eAAU,4BAA2BF,KAAM;AADjB,KAArB,CAAP;AAGD;AACD,qBAASyD,SAAT,CAAmB;AACjBzF,SAAKwF;AADY,GAAnB,EAEGhE,IAFH,CAESiD,YAAD,IAAkB;AACxB,QAAIA,aAAa9E,MAAb,CAAoB+E,CAApB,KAA0B,CAA9B,EAAiClE,IAAIoB,IAAJ,CAAS;AACxCK,cAAQ;AADgC,KAAT,EAAjC,KAGKzB,IAAIoB,IAAJ,CAAS;AACZK,cAAQ;AADI,KAAT;AAGN,GATD,EASGF,KATH,CASSC,SAAS;AAChBhB,YAAQC,GAAR,CAAYe,KAAZ;AACAxB,QAAIyB,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBM,eAAU,0BAAyBF,KAAM;AADtB,KAArB;AAGD,GAdD;AAeD,CAzBD;;AA2BAG,QAAQuD,kBAAR,GAA6B,UAAUnF,GAAV,EAAeC,GAAf,EAAoB;AAC/C,MAAImF,SAAS,CAAC,MAAD,EAAS,QAAT,CAAb;AACA,MAAIC,YAAY,EAAhB;AACA,OAAK,IAAI/F,IAAI,CAAb,EAAgBA,IAAI,IAApB,EAA0BA,GAA1B,EAA+B;AAC7B,QAAIgG,YAAY,gBAAMxC,IAAN,CAAWwC,SAAX,EAAhB;AACA,QAAIC,WAAW,gBAAMzC,IAAN,CAAWyC,QAAX,EAAf;AACA,QAAIC,QAAQ,gBAAM1C,IAAN,CAAW2C,QAAX,EAAZ;AACA,QAAIC,aAAa,gBAAMC,QAAN,CAAeD,UAAf,EAAjB;AACA,QAAIE,eAAeR,OAAOS,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,CAA3B,CAAP,CAAnB;AACA,QAAIC,cAAc,gBAAMC,QAAN,CAAeC,KAAf,EAAlB,CAN6B,CAMa;AAC1C,QAAIC,aAAa,gBAAMC,IAAN,CAAWC,MAAX,EAAjB;;AAEA,QAAI7B,WAAW;AACb1B,YAAM;AACJwC,iBADI;AAEJC;AAFI,OADO;AAKbH,cAAQQ,YALK;AAMbM,aAAOF,WANM;AAObR,aAAOA,KAPM;AAQbE,kBAAYA,UARC;AASb5E,iBAAWqF;AATE,KAAf;AAWAd,cAAU7F,IAAV,CAAegF,QAAf;AACD;AACD,qBAAS8B,UAAT,CAAoBjB,SAApB,EAA+BpE,IAA/B,CAAoCsF,QAAQ;AACxCtG,QAAIoB,IAAJ,CAAS;AACPkF;AADO,KAAT;AAGD,GAJH,EAKG/E,KALH,CAKSC,SAAS;AACdhB,YAAQgB,KAAR,CAAe,UAASA,KAAM,EAA9B;AACD,GAPH;AAQD,CAjCD","file":"employee.js","sourcesContent":["import mongoose from 'mongoose';\nimport Employee from \"../models/employee\";\nimport faker from 'faker';\n\n\nconst getAggreateMatchedIds = (result) => {\n  let ids = [];\n  for (let i = 0; i < result.length; i++) {\n    ids.push(result[i]._id);\n  }\n  return ids;\n}\nconst getSearchReg = (search) => {\n  var terms = search.split(' ');\n\n  var regexString = \"\";\n\n  for (var i = 0; i < terms.length; i++) {\n    regexString += terms[i];\n    if (i < terms.length - 1) regexString += '|';\n  }\n\n  return new RegExp(regexString, 'ig');\n}\nconst search = (req, res, filter) => {\n  const offset = req.query._offset ? parseInt(req.query._offset, 10) : 0;\n  let limit = req.query._limit ? parseInt(req.query._limit, 10) : 20;\n\n  console.log('offset', offset);\n  console.log('limit', limit);\n  console.log('filter', filter);\n\n  if (limit > 50) limit = 50;\n  const cursor = Employee.find(filter).sort({\n    createdAt: -1\n  }).skip(offset).limit(limit);\n\n  // ensures that the effects of skip() and limit() will be ignored\n  cursor.exec().then(emploees => {\n    Employee.count().then(totalCount => {\n      res.json({\n        metadata: {\n          totalCount\n        },\n        records: emploees\n      });\n    });\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({\n      message: `Internal Server Error: ${error}`\n    });\n  });\n}\n// TODO: should implement range pagination instead of using skip to result in better server performance\nexports.employee_list = function (req, res) {\n  const filter = {};\n  if (req.query.status) filter.status = req.query.status;\n  if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n\n\n  if (req.query._summary === undefined) {\n    if (req.query.search) {\n\n      Employee.aggregate()\n        .project({\n          fullname: {\n            $concat: ['$name.firstName', ' ', '$name.lastName']\n          }\n        })\n        .match({\n          fullname: new RegExp(req.query.search, 'ig')\n        }).exec().then(results => {\n          console.log('results', getSearchReg(req.query.search));\n          const ids = getAggreateMatchedIds(results);\n          if (ids.length > 0) filter._id = {\n            $in: ids\n          }\n          search(req, res, filter);\n        });\n    } else search(req, res, filter);\n  } else {\n    console.log('doing aggregation', filter);\n    Employee.aggregate([{\n          $match: filter\n        },\n        {\n          $group: {\n            _id: {\n              name: '$owner',\n              createdAt: '$createdAt'\n            },\n            count: {\n              $sum: 1\n            }\n          }\n        },\n      ]).exec().then(results => {\n        const stats = {};\n        results.forEach(result => {\n          if (!stats[result._id.owner]) stats[result._id.owner] = {};\n          stats[result._id.owner][result._id.status] = result.count;\n        });\n        res.json(stats);\n      })\n      .catch(error => {\n        console.log(error);\n        res.status(500).json({\n          message: `Internal Server Error: ${error}`\n        });\n      });\n  }\n};\n\nexports.employee_create = function (req, res) {\n  const newEmployee = req.body;\n  newEmployee.created = new Date();\n  if (!newEmployee.status) {\n    newEmployee.status = 'New';\n  }\n\n  var newUser = new Employee(newEmployee);\n  newUser.save().then(savedEmployee => {\n    res.json(savedEmployee);\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({\n      message: `Internal Server Error: ${error}`\n    });\n  });\n};\n\n\n\nexports.employee_bulk_delete = function (req, res) {\n  let docIds = req.body.docIds\n  try {\n    docIds = docIds.map(id => mongoose.Types.ObjectId(id));\n  } catch (error) {\n    res.status(422).json({\n      message: `Invalid issue ID format: ${error}`\n    });\n    return;\n  }\n\n  Employee.deleteMany({\n    _id: {\n      '$in': docIds\n    }\n  }).then((deleteResult) => {\n    console.log('deleteResult', deleteResult.result);\n    if (deleteResult.result.n === docIds.length) res.json({\n      status: 'OK'\n    });\n    else res.json({\n      status: 'Warning: object not found'\n    });\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({\n      message: `Internal Server Error: ${error}`\n    });\n  });\n};\n\n// Get employee detail\nexports.employee_detail = function (req, res) {\n  let documentId;\n  try {\n    documentId = mongoose.Types.ObjectId(req.params.id);\n  } catch (error) {\n    console.log('error', error);\n    res.status(422).json({\n      message: `Invalid issue ID format: ${error}`\n    });\n    return;\n  }\n\n  Employee.findOne({\n    _id: documentId\n  }).then(employee => {\n    if (!employee) res.status(404).json({\n      message: `No such employee: ${documentId}`\n    });\n    else res.json(employee);\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({\n      message: `Internal Server Error: ${error}`\n    });\n  });\n};\n\nconst handleError = (error, res) => {\n  console.error(error);\n  return res.status(500).json({\n    message: `Internal Server Error: ${error}`\n  });\n}\n// update employee\nexports.employee_update = function (req, res) {\n  let _id;\n  try {\n    _id = mongoose.Types.ObjectId(req.params.id);\n  } catch (error) {\n    return res.status(422).json({\n      message: `Invalid issue ID format: ${error}`\n    });\n  }\n\n  const employee = req.body;\n  employee.updatedAt = new Date();\n\n  Employee.findOneAndUpdate({\n    \"_id\": _id\n  }, {\n    \"$set\": employee\n  }, {\n    new: true\n  }, function (err, updatedEmployee) {\n    if (err) return handleError(err, res);\n    res.json(updatedEmployee);\n  })\n};\n\n// delete employee\nexports.employee_delete = function (req, res) {\n  console.log('employee_delete', req.params.id);\n  let docId;\n  try {\n    docId = mongoose.Types.ObjectId(req.params.id);\n  } catch (error) {\n    return res.status(422).json({\n      message: `Invalid issue ID format: ${error}`\n    });\n  }\n  Employee.deleteOne({\n    _id: docId\n  }).then((deleteResult) => {\n    if (deleteResult.result.n === 1) res.json({\n      status: 'OK'\n    });\n    else res.json({\n      status: 'Warning: object not found'\n    });\n  }).catch(error => {\n    console.log(error);\n    res.status(500).json({\n      message: `Internal Server Error: ${error}`\n    });\n  });\n};\n\nexports.generate_employees = function (req, res) {\n  var gender = ['Male', 'Female'];\n  var employees = [];\n  for (var i = 0; i < 1000; i++) {\n    var firstName = faker.name.firstName();\n    var lastName = faker.name.lastName();\n    var title = faker.name.jobTitle();\n    var department = faker.commerce.department();\n    var randomGender = gender[Math.floor(Math.random() * 2)];\n    var randomEmail = faker.internet.email(); // Rusty@arne.info\n    var randomDate = faker.date.recent();\n\n    var employee = {\n      name: {\n        firstName,\n        lastName\n      },\n      gender: randomGender,\n      email: randomEmail,\n      title: title,\n      department: department,\n      createdAt: randomDate,\n    }\n    employees.push(employee);\n  }\n  Employee.insertMany(employees).then(docs => {\n      res.json({\n        docs\n      });\n    })\n    .catch(error => {\n      console.error(`error: ${error}`);\n    });\n};\n"]}